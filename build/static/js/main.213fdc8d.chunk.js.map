{"version":3,"sources":["components/ToDoCard.tsx","components/LoginInput.tsx","components/SubmitToDo.tsx","components/AddNextTodo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","pos","marginBottom","color","card","width","opacity","backgroundColor","cardContent","display","justifyContent","ToDoCard","text","toDoKey","handleToDoDelete","loading","classes","useState","isDeleting","setIsDeleting","useEffect","Card","className","CardContent","Typography","variant","IconButton","aria-label","onClick","disabled","CircularProgress","theme","root","padding","alignItems","input","marginLeft","spacing","minWidth","border","borderRadius","iconButton","inputProps","LoginInput","handleLogin","setSecret","Box","TextField","onChange","event","target","value","placeholder","type","style","SubmitToDo","handleAddTodo","displaySuccess","errorMessage","isAddingNewTodo","setIsAddingNewTodo","container","AddNextTodo","setNextToDo","nextToDo","logout","marginTop","position","title","paddingBottom","portal","window","location","hostname","process","REACT_APP_PORTAL_URL","undefined","skynetClient","SkynetClient","filename","App","secret","authenticated","setAuthenticated","setErrorMessage","setLoading","setDisplaySuccess","todos","setTodos","loadToDos","a","genKeyPairFromSeed","publicKey","db","getJSON","entry","data","console","log","message","preventDefault","privateKey","todoKey","uuid","newTodos","setJSON","setTimeout","handleDeleteToDo","key","todosKeys","Object","keys","paddingTop","flexDirection","height","maxWidth","Paper","maxHeight","overflow","List","map","idx","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.213fdc8d.chunk.js","sourcesContent":["import {\n  Card,\n  CardContent,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  pos: {\n    marginBottom: 12,\n    color: \"white\",\n  },\n  card: {\n    width: \"100%\",\n    marginBottom: \"3vh\",\n    opacity: \"80%\",\n    backgroundColor: \"grey\",\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\ninterface ToDoCardProps {\n  text: string;\n  toDoKey: string;\n  handleToDoDelete: (key: string) => void;\n  loading: boolean;\n}\n\nconst ToDoCard = ({\n  text,\n  toDoKey,\n  handleToDoDelete,\n  loading,\n}: ToDoCardProps) => {\n  const classes = useStyles();\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    if (!loading) {\n      setIsDeleting(false);\n    }\n  }, [loading]);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h6\" className={classes.pos} color=\"textSecondary\">\n          {text}\n        </Typography>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => {\n            handleToDoDelete(toDoKey);\n            setIsDeleting(true);\n          }}\n          disabled={loading}\n        >\n          {loading && isDeleting ? <CircularProgress /> : <DeleteIcon />}\n        </IconButton>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ToDoCard;\n","import React from \"react\";\nimport {\n  Box,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface LoginFormProps {\n  handleLogin: (event: any) => Promise<void>;\n  setSecret: React.Dispatch<React.SetStateAction<string>>;\n  loading: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"40%\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    minWidth: \"40%\",\n    border: \"2px solid #66fbf0\",\n    padding: \"10px 10px\",\n    borderRadius: \"5%\",\n  },\n  iconButton: {\n    padding: 10,\n  },\n  inputProps: {\n    color: \"white\",\n  },\n}));\n\nconst LoginInput = ({ handleLogin, setSecret, loading }: LoginFormProps) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" width=\"100vw\" justifyContent=\"center\">\n      <TextField\n        className={classes.input}\n        onChange={(event) => setSecret(event.target.value)}\n        placeholder=\"Enter your Seed Phrase\"\n        inputProps={{\n          className: classes.inputProps,\n        }}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={handleLogin}\n      >\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <SendIcon style={{ color: \"#66fbf0\" }} />\n        )}\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default LoginInput;\n","import {\n  Box,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\ninterface SubmitToDoProps {\n  handleAddTodo: () => Promise<void>;\n  loading: boolean;\n  displaySuccess: boolean;\n  errorMessage: string;\n  value: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nconst SubmitToDo = ({\n  handleAddTodo,\n  loading,\n  displaySuccess,\n  errorMessage,\n  value,\n}: SubmitToDoProps) => {\n  const classes = useStyles();\n  const [isAddingNewTodo, setIsAddingNewTodo] = useState(false);\n\n  useEffect(() => {\n    if (!loading) {\n      setIsAddingNewTodo(false);\n    }\n  }, [loading]);\n\n  return (\n    <Box>\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={() => {\n          handleAddTodo();\n          setIsAddingNewTodo(true);\n        }}\n        disabled={loading || value === \"\"}\n      >\n        {loading && isAddingNewTodo ? (\n          <CircularProgress />\n        ) : (\n          <SendIcon style={{ color: \"#66fbf0\" }} />\n        )}\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default SubmitToDo;\n","import { Box, makeStyles, TextField } from \"@material-ui/core\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport SubmitToDo from \"./SubmitToDo\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  root: {\n    padding: \"10px 10px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    border: \"2px solid #66fbf0\",\n    borderRadius: \"5%\",\n  },\n  inputProps: {\n    color: \"white\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    minWidth: \"90%\",\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\ninterface AddNextTodoProps {\n  setNextToDo: Dispatch<SetStateAction<string>>;\n  handleAddTodo: () => Promise<void>;\n  loading: boolean;\n  displaySuccess: boolean;\n  nextToDo: string;\n  errorMessage: string;\n}\n\nconst AddNextTodo = ({\n  setNextToDo,\n  handleAddTodo,\n  loading,\n  displaySuccess,\n  nextToDo,\n  errorMessage,\n}: AddNextTodoProps) => {\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" marginBottom=\"4vh\">\n      <TextField\n        onChange={(event) => setNextToDo(event.target.value)}\n        value={nextToDo}\n        placeholder=\"Your next ToDo\"\n        className={classes.root}\n        inputProps={{\n          className: classes.inputProps,\n        }}\n      />\n      <SubmitToDo\n        handleAddTodo={handleAddTodo}\n        loading={loading}\n        errorMessage={errorMessage}\n        displaySuccess={displaySuccess}\n        value={nextToDo}\n      />\n    </Box>\n  );\n};\n\nexport default AddNextTodo;\n","import React, { useState } from \"react\";\nimport { SkynetClient, genKeyPairFromSeed } from \"skynet-js\";\nimport {\n  Box,\n  Button,\n  List,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ToDoCard from \"./components/ToDoCard\";\nimport LoginInput from \"./components/LoginInput\";\nimport uuid from \"uuid\";\nimport AddNextTodo from \"./components/AddNextTodo\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"40%\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    minWidth: \"90%\",\n  },\n  iconButton: {\n    padding: 10,\n  },\n  logout: {\n    marginTop: \"85vh\",\n    color: \"#66fbf0\",\n    border: \"2px solid #66fbf0\",\n    position: \"absolute\",\n  },\n  title: {\n    color: \"white\",\n    paddingBottom: \"30px\",\n  },\n}));\n\nconst portal =\n  window.location.hostname === \"localhost\"\n    ? process.env.REACT_APP_PORTAL_URL\n    : undefined;\n\nconst skynetClient = new SkynetClient(portal);\nconst filename = \"data.json\";\n\nfunction App() {\n  const [secret, setSecret] = useState(\"\");\n  const [nextToDo, setNextToDo] = useState(\"\");\n  const [authenticated, setAuthenticated] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [displaySuccess, setDisplaySuccess] = useState(false);\n  const [todos, setTodos] = useState({});\n  const handleReset = () => {\n    setSecret(\"\");\n    setNextToDo(\"\");\n    setErrorMessage(\"\");\n    setLoading(false);\n    setDisplaySuccess(false);\n    setAuthenticated(false);\n  };\n\n  const loadToDos = async () => {\n    try {\n      const { publicKey } = genKeyPairFromSeed(secret);\n      const entry = await skynetClient.db.getJSON(publicKey, filename);\n\n      if (entry) {\n        setNextToDo(\"\");\n        setTodos(entry.data ? entry.data : {});\n        console.log(\"ToDos: \", entry.data);\n      }\n    } catch (error) {\n      setErrorMessage(error.message);\n      setNextToDo(\"\");\n    }\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    await loadToDos();\n\n    setAuthenticated(true);\n    setLoading(false);\n  };\n\n  const handleAddTodo = async () => {\n    setLoading(true);\n    const { privateKey } = genKeyPairFromSeed(secret);\n    try {\n      const todoKey = uuid();\n      const newTodos = { ...todos };\n      newTodos[todoKey] = nextToDo;\n      console.log(\"newTodos: \", newTodos);\n      await skynetClient.db.setJSON(privateKey, filename, newTodos);\n      setTodos(newTodos);\n      setDisplaySuccess(true);\n      setNextToDo(\"\");\n      setTimeout(() => setDisplaySuccess(false), 5000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  const handleDeleteToDo = async (key: string) => {\n    setLoading(true);\n    const { privateKey } = genKeyPairFromSeed(secret);\n    try {\n      const newTodos = { ...todos };\n      delete newTodos[key];\n      console.log(\"newTodos: \", newTodos);\n      await skynetClient.db.setJSON(privateKey, filename, newTodos);\n      setTodos(newTodos);\n      setDisplaySuccess(true);\n      setTimeout(() => setDisplaySuccess(false), 5000);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  const todosKeys: Array<string> = Object.keys(todos);\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      paddingTop=\"10vh\"\n      flexDirection=\"column\"\n      height=\"100vh\"\n      width=\"100vw\"\n      style={{ backgroundColor: \"#0a192f\" }}\n    >\n      {authenticated ? (\n        <>\n          <Typography variant=\"h2\" className={classes.title}>\n            SkyNet Todo List.\n          </Typography>\n          <AddNextTodo\n            displaySuccess={displaySuccess}\n            loading={loading}\n            nextToDo={nextToDo}\n            handleAddTodo={handleAddTodo}\n            setNextToDo={setNextToDo}\n            errorMessage={errorMessage}\n          />\n          <Box width=\"40%\" maxWidth={800}>\n            <Paper\n              style={{\n                maxHeight: \"50vh\",\n                width: \"100%\",\n                overflow: \"auto\",\n                backgroundColor: \"#0a192f\",\n              }}\n            >\n              <List style={{ color: \"#66fbf0\" }}>\n                {todosKeys.map((key, idx) => (\n                  <ToDoCard\n                    text={todos[key]}\n                    toDoKey={key}\n                    key={idx}\n                    handleToDoDelete={handleDeleteToDo}\n                    loading={loading}\n                  />\n                ))}\n              </List>\n            </Paper>\n          </Box>\n          <Button\n            className={classes.logout}\n            style={{ color: \"#66fbf0\" }}\n            onClick={handleReset}\n            variant=\"outlined\"\n          >\n            Logout\n          </Button>\n        </>\n      ) : (\n        <>\n          <LoginInput\n            loading={loading}\n            setSecret={setSecret}\n            handleLogin={handleLogin}\n          />\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"fontsource-metropolis/all.css\";\r\nimport \"./assets/main.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}